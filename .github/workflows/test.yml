name: Test
on: [push]

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: lint
        uses: golangci/golangci-lint-action@v2
        with:
          args: --timeout 2m

  controllers_testing:
    name: controllers_testing
    runs-on: ubuntu-latest
    needs: lint

    strategy:
      matrix:
        kind-image:
          # According release notice KinD core team asks to use exact images (including the digest)
          # because they may need to change the image format again in the future
          - kindest/node:v1.23.4@sha256:0e34f0d0fd448aa2f2819cfd74e99fe5793a6e4938b328f657c8e3f81ee0dfb9
          - kindest/node:v1.22.7@sha256:1dfd72d193bf7da64765fd2f2898f78663b9ba366c2aa74be1fd7498a1873166
          - kindest/node:v1.21.10@sha256:84709f09756ba4f863769bdcabe5edafc2ada72d3c8c44d6515fc581b66b029c
          - kindest/node:v1.20.15@sha256:393bb9096c6c4d723bb17bceb0896407d7db581532d11ea2839c80b28e5d8deb
          - kindest/node:v1.19.16@sha256:81f552397c1e6c1f293f967ecb1344d8857613fb978f963c30e907c32f598467
          - kindest/node:v1.18.20@sha256:e3dca5e16116d11363e31639640042a9b1bd2c90f85717a7fc66be34089a8169
          - kindest/node:v1.17.17@sha256:e477ee64df5731aa4ef4deabbafc34e8d9a686b49178f726563598344a3898d5
          - kindest/node:v1.16.15@sha256:64bac16b83b6adfd04ea3fbcf6c9b5b893277120f2b2cbf9f5fa3e5d4c2260cc

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go 1.18
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
      id: go

    - name: Set up Kubebuilder
      run: |
        OS=$(uname -s | tr '[:upper:]' '[:lower:]')
        ARCH=$(uname -m | sed 's/x86_64/amd64/')
        curl -fsL "https://storage.googleapis.com/kubebuilder-tools/kubebuilder-tools-${{matrix.kubebuilder-version}}-${OS}-${ARCH}.tar.gz" -o kubebuilder-tools
        tar -zvxf kubebuilder-tools
        sudo mv kubebuilder/ /usr/local/kubebuilder

    - name: Test
      run: make test KIND_IMAGE=${{matrix.kind-image}}

  e2e_testing:
    name: e2e_testing
    runs-on: ubuntu-latest
    needs: lint
    env:
      KIND_CLUSTER_NAME: kind-cluster
      OPERATOR_NAMESPACE: tarantool-operator
      APP_NAMESPACE: tarantool-app
      OPERATOR_IMAGE_REPO: tarantool-operator
      OPERATOR_IMAGE_TAG: 0.0.0

    strategy:
      fail-fast: false
      matrix:
        kubernetes-version: [v1.16.4, v1.19.4, v1.22.4, v1.23.4]

    steps:
    - uses: actions/checkout@v1

    - name: Set up helm
      uses: azure/setup-helm@v1

    - name: Set up Kind Cluster
      uses: helm/kind-action@v1.2.0
      with:
        node_image: kindest/node:${{ matrix.kubernetes-version }}
        cluster_name: ${{ env.KIND_CLUSTER_NAME }}

    - name: Prepare Tarantool operator Docker image
      run: |
        make docker-build REPO=${{ env.OPERATOR_IMAGE_REPO }} VERSION=${{ env.OPERATOR_IMAGE_TAG }}
        kind load docker-image ${{ env.OPERATOR_IMAGE_REPO }}:${{ env.OPERATOR_IMAGE_TAG }} \
          --name ${{ env.KIND_CLUSTER_NAME }}

    - name: Install Tarantool Operator in Kind
      run: |
        # Set the default namespace
        kubectl config set-context --current --namespace=${{ env.OPERATOR_NAMESPACE }}

        helm install -n ${{ env.OPERATOR_NAMESPACE }} operator helm-charts/tarantool-operator \
             --create-namespace \
             --set image.repository=${{ env.OPERATOR_IMAGE_REPO }} \
             --set image.tag=${{ env.OPERATOR_IMAGE_TAG }}

    - name: Waiting for Operator Deployment availability
      run: kubectl wait deployment/controller-manager --for=condition=available --timeout=60s || true

    - name: Сhecking the number of available replicas
      run: |
        available_num=$(kubectl get deployments/controller-manager -o=jsonpath="{.status.availableReplicas}")
        desired_num=$(kubectl get deployments/controller-manager -o=jsonpath="{.status.replicas}")

        if [[ $available_num -ne $desired_num ]]; then
          kubectl describe deployments/controller-manager
          echo 'ERROR: invalid number of available replicas...' >&2; exit 1
        fi

    - name: Install Tarantool Cartridge app in Kind
      run: |
        # Set the default namespace
        kubectl config set-context --current --namespace=${{ env.APP_NAMESPACE }}

        helm install -n ${{ env.APP_NAMESPACE }} --create-namespace \
          -f test/helpers/ci/cluster_values.yaml \
          cartridge-app \
          helm-charts/tarantool-cartridge

    - name: Waiting for routers Pods availability
      run: for i in {1..60}; do kubectl wait -n ${{ env.APP_NAMESPACE }} --for=condition=ready pod --timeout=180s -l tarantool.io/role=router && break || sleep 1; done

    - name: Сhecking the number of ready router replicas
      run : |
        desired_routers_num=1
        ready_routers_num=$(kubectl get statefulsets/router-0 -o=jsonpath="{.status.readyReplicas}")

        if [[ $ready_routers_num -ne $desired_routers_num ]]; then
          kubectl describe statefulsets/router-0
          kubectl describe pod -l tarantool.io/role=router
          echo 'ERROR: invalid number of ready routers...' >&2; exit 1
        fi

    - name: Waiting for storages availability
      run: kubectl wait --for=condition=ready pod --timeout=180s -l tarantool.io/role=storage || true

    - name: Сhecking the number of ready storage replicas
      run: |
        desired_storage_num=1
        ready_storage_num=$(kubectl get statefulsets/storage-0 -o=jsonpath="{.status.readyReplicas}")

        if [[ $ready_storage_num -ne $desired_storage_num ]]; then
          kubectl describe statefulsets/storage-0
          kubectl describe pod -l tarantool.io/role=storage
          echo 'ERROR: invalid number of ready storages...' >&2; exit 1
        fi




